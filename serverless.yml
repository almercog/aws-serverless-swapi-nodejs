service: swapi-api
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: us-east-1

plugins:
  - serverless-iam-roles-per-function
  - serverless-offline
package:
  individually: true
  exclude:
    - node_modules/aws-sdk/**
    - node_modules/@aws-sdk/**

# You can add CloudFormation resource templates here
resources:
  Resources:
    peopleTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: people
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

functions:
  people:
    handler: src/swapi/people/index.handler
    description: Create a New Person
    environment:
      PEOPLE_TABLE_NAME: !Ref peopleTable
      AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:scan
          - dynamodb:getItem
          - dynamodb:PutItem
          - dynamodb:updateItem
          - dynamodb:deleteItem
        Resource: !GetAtt peopleTable.Arn
    events:
      - http:
          path: people
          method: post
          cors: true
          authorizer: aws_iam
      - http:
          path: people/{id}
          method: patch
          cors: true
          authorizer: aws_iam
      - http:
          path: people/{id}
          method: delete
          cors: true
          authorizer: aws_iam
      - http:
          path: people/{id}
          method: get
          cors: true
          authorizer: aws_iam
      - http:
          path: people
          method: get
          cors: true
          authorizer: aws_iam
